{"version":3,"sources":["context/importContext.js","components/Navigation.js","context/listContext.js","components/Settings.js","components/ListItem.js","components/list.js","components/FieldContent.js","components/ListInFieldContent.js","components/Options.js","components/Mapping.js","components/Save.js","components/SettingsFile.js","components/UploadFile.js","components/AppImporter.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","importerState","importer","uploadFile","importType","excelfile","settings","nametamplet","language","existingRecordPolicy","errorPolicy","numInitialRowsToSkip","mapping","ImporterContext","createContext","ImporterReducer","state","action","type","payload","ImporterProvider","children","useReducer","dispatch","setAddMapping","newMap","Provider","value","setimportState","setUploadFile","fieldName","setSetting","setMapping","i","fields","addField","list","copy","Object","assign","require","list_id","push","element_code","title","const","optionSkip","matchOn","map","item","deleteField","index","nameFunction","excelFiled","toDelete","selectd","splice","setMappingOption","setMappingConst","setMappingLisiId","Navigationt","useContext","className","aria-current","href","onClick","listMaping","ListContext","ListReducer","ListProvider","useEffect","setexcelFiled","setList","upJson","url","funState","console","log","fetch","then","res","json","data","values","FormData","append","method","body","Settings","importTypeTitle","ListItem","prop","data-element-code","id","data-title","showList","List","FieldContent","useState","field","Required","RequiredState","listToConst","setlistToConst","inputContent","indexf","IC","exval","exvalState","myChangeHandler","event","target","name","onChange","excel","colNum","idno","checked","e","ChangeConst","disabled","data-bs-target","showOptions","ListInFieldContent","aria-hidden","Options","indexOF","indexO","settingsState","tempsettings","nameSettings","role","data-dismiss","aria-label","scope","optionSkipRow","optionSkipGroup","optionDelimiter","data-sender-control","Mapping","showO","showOState","showL","showLState","indexOState","indexOFState","J","Save","align","SettingsFile","size","placeholder","UploadFile","includes","AppImporter","Navigation","onDisabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edc1d924.chunk.js","sourcesContent":["import { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n    importerState:1,\r\n    importer:{\r\n        uploadFile:{\r\n                    importType:'',\r\n                    excelfile:''//,\r\n                  //  importValueLn:''\r\n\r\n        },\r\n        settings:{\r\n                    nametamplet:'',\r\n                    language:'he_IL',\r\n                    existingRecordPolicy:'merge_on_idno',\r\n                    errorPolicy:'ignore',\r\n                    numInitialRowsToSkip:1\r\n        },\r\n        mapping:[\r\n           // { element_code:'id',title:'מספר מזהה',value:'',require:true},\r\n          // { element_code:'type',title:'סוג פריט',value:'',const:false,list_id:''}\r\n           ]\r\n\r\n    }\r\n                              \r\n}\r\n\r\nexport const  ImporterContext  = createContext();\r\n\r\nfunction ImporterReducer(state,action){\r\n  \r\n\r\n    switch (action.type) {\r\n        case \"setimportState\":\r\n            return {\r\n                ...state,\r\n                importerState:action.payload,\r\n            }\r\n       \r\n        case \"setAddMapping\":\r\n            return {\r\n                ...state,\r\n                importer:action.payload,\r\n            }\r\n            \r\n           \r\n        case \"setSetting\":\r\n            return {\r\n                    ...state,\r\n                    importer:action.payload\r\n                    //{settings:action.payload }\r\n                      \r\n                   } \r\n        case \"setMapping\":\r\n            return {\r\n                ...state,\r\n                    importer:action.payload\r\n                    //{mapping:action.payload}   \r\n                    }\r\n        case \"setMappingLisiId\":\r\n            return {\r\n                ...state,\r\n                    importer:action.payload\r\n                    }            \r\n        case \"setMappingConst\":\r\n        return {\r\n            ...state,\r\n                importer:action.payload\r\n                //{mapping:action.payload}   \r\n                }\r\n        case \"setUploadFile\":\r\n            return {\r\n                ...state,\r\n                    importer:action.payload\r\n                    //{mapping:action.payload}   \r\n                    }\r\n                    \r\n        case \"setMappingOption\":\r\n            return {\r\n                ...state,\r\n                    importer:action.payload\r\n                    //{mapping:action.payload}   \r\n                    }       \r\n         \r\n        default:\r\n            return {\r\n                ...state,\r\n                importerState:1,\r\n            }\r\n           \r\n    }\r\n}\r\nexport const ImporterProvider  = ({ children }) =>{\r\n   const [state, dispatch] = useReducer(ImporterReducer, initialState);\r\n   \r\n    function setimportState(state) {\r\n        dispatch({\r\n            type: 'setimportState',\r\n            payload: state\r\n        });\r\n    }\r\n\r\n    \r\n    function setUploadFile(fieldName,value) {\r\n        var uploadFile\r\n        uploadFile = state.importer;\r\n        uploadFile.uploadFile[fieldName]=value;\r\n      //  if(fieldName==\"importType\")\r\n       // {   setMappingLisiId(value)}\r\n        dispatch({\r\n            type: 'setUploadFile',\r\n            payload:uploadFile     \r\n            \r\n        });\r\n    \r\n    }\r\n    \r\n    function setSetting(fieldName,value) {\r\n        var settings\r\n        settings = state.importer;\r\n        settings.settings[fieldName]=value;\r\n        dispatch({\r\n            type: 'setSetting',\r\n            payload:settings     \r\n            \r\n        });\r\n\r\n    }\r\n\r\n   function setMapping(fieldName,i,value) {\r\n        var mapping\r\n        mapping = state.importer;\r\n      if(i==null)\r\n       mapping.mapping[fieldName].value=value;\r\n       else\r\n       mapping.mapping[fieldName].fields[i].value=value;\r\n        dispatch({\r\n            type: 'setMapping',\r\n            payload:mapping     \r\n            \r\n        });\r\n\r\n    }\r\n    function setMappingLisiId(value) {\r\n        var mapping\r\n        mapping = state.importer;\r\n       mapping.mapping[1].list_id=value;\r\n        dispatch({\r\n            type: 'setMappingLisiId',\r\n            payload:mapping     \r\n            \r\n        });\r\n\r\n    }\r\n\r\n    \r\n    function setMappingConst(fieldName,i,value) {\r\n        var mapping\r\n        mapping = state.importer;\r\n      if(i==null)\r\n       mapping.mapping[fieldName].const=value;\r\n       else\r\n       mapping.mapping[fieldName].fields[i].const=value;\r\n        dispatch({\r\n            type: 'setMappingConst',\r\n            payload:mapping     \r\n            \r\n        });\r\n\r\n    }\r\n  \r\n    function setMappingOption(fieldName,i,value) {\r\n        var mapping\r\n        mapping = state.importer;\r\n       if (i==null)\r\n        mapping.mapping[fieldName].settings=value;\r\n      else\r\n        mapping.mapping[fieldName].fields[i].settings=value;\r\n        dispatch({\r\n            type: 'setMappingOption',\r\n            payload:mapping     \r\n            \r\n        });\r\n\r\n    }\r\n    \r\n\r\n    function setAddMapping(newMap) {\r\n        var mapping\r\n        mapping = state.importer;\r\n        mapping.mapping=newMap;\r\n        dispatch({\r\n            type: 'setAddMapping',\r\n            payload:mapping     \r\n            \r\n        });\r\n\r\n    }\r\n\r\n    \r\n    function addField(list){\r\n        const copy = Object.assign([],state.importer.mapping);\r\n\r\n\r\n        if(list.fields==null)\r\n            {\r\n            if(list.require && list.list_id)\r\n            {\r\n                copy.push({\r\n                    element_code:list.element_code,\r\n                    title:list.title,\r\n                    value:'',\r\n                    list_id:list.list_id,\r\n                    require:true,\r\n                    const:false,\r\n                     });\r\n            }\r\n            else if(list.require   && !list.list_id)\r\n            {\r\n                copy.push({\r\n                    element_code:list.element_code,\r\n                    title:list.title,\r\n                    value:'',\r\n                    require:true,\r\n                    const:false,\r\n                     });\r\n            }\r\n            else if( list.list_id && !list.require )\r\n              {                 \r\n\r\n                  copy.push({\r\n                    element_code:list.element_code,\r\n                    title:list.title,\r\n                    value:'',\r\n                    list_id:list.list_id,\r\n                    const:false,\r\n                    settings:{optionSkip:true,matchOn:''},\r\n                     });\r\n                    }\r\n            else\r\n              {               \r\n\r\n                  copy.push({\r\n                   element_code:list.element_code,\r\n                   title:list.title,\r\n                   value:'',\r\n                   const:false,\r\n                   settings:{optionSkip:true,matchOn:''},\r\n                    });\r\n                }\r\n                }\r\n         else{  \r\n           \r\n\r\n            copy.push({\r\n                    element_code:list.element_code,\r\n                    title:list.title,\r\n                    fields:list.fields.map((item)=>\r\n                            {return {element_code:item.element_code,\r\n                                    title:item.title,\r\n                                    const:false,\r\n                                    settings:{optionSkip:true,matchOn:''}}\r\n                                    })\r\n                   });\r\n                }\r\n            \r\n        setAddMapping(copy);\r\n       \r\n       \r\n      };\r\n \r\n    const deleteField=(index,nameFunction,excelFiled)=>{\r\n    const toDelete = Object.assign([],state.importer.mapping);\r\n     //update select excelFiled  \r\n     if(toDelete[index].fields)\r\n       { \r\n         toDelete[index].fields.map((item)=>\r\n                {\r\n                    return (item.value!='' & item.const==false) && (excelFiled[item.value-1].selectd=false)\r\n                \r\n                })\r\n            }\r\n      else\r\n        {\r\n            (toDelete[index].value!=\"\" & toDelete[index].const==false) && (excelFiled[toDelete[index].value-1].selectd=false)\r\n        }\r\n    //\r\n    toDelete.splice(index,1) \r\n    nameFunction(toDelete);\r\n      \r\n      \r\n      // setAddMapping(toDelete);\r\n      };\r\n\r\n    return (\r\n        <ImporterContext.Provider value={{\r\n            importerState:state.importerState,\r\n            importer:state.importer,\r\n            setimportState,\r\n            setUploadFile,\r\n            setSetting,\r\n            setMapping,\r\n            setAddMapping,\r\n            addField,\r\n            deleteField,\r\n            setMappingOption,\r\n            setMappingConst,\r\n            setMappingLisiId\r\n            \r\n    }}>\r\n        {children}\r\n        \r\n        </ImporterContext.Provider>\r\n    );\r\n\r\n}\r\n","import React, {useContext } from 'react';\r\nimport { ImporterContext } from '../context/importContext';\r\n\r\n\r\nfunction Navigationt() {\r\n\r\n  const {importerState,importer, setimportState} = useContext(ImporterContext);\r\n \r\n  const navigationComp =()=>{\r\n    if(importer.settings.nametamplet==\"\") \r\n      setimportState(importerState);\r\n    else\r\n    setimportState(3);\r\n  \r\n  }\r\n\r\n  return (   \r\n  <div className=\"Navigation\">\r\n      <ul className=\"nav nav-pills\">\r\n        <li className=\"nav-item\">\r\n          <a className={importerState == 1 ?\"nav-link active\" : \"nav-link\"} aria-current=\"page\" href=\"#\" /*onClick={() =>setimportState(1)}*/>העלה קובץ</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className={importerState == 2 ?\"nav-link active\" : \"nav-link\"} href=\"#\" onClick={importer.uploadFile.excelfile==''?() => setimportState(1) : () => setimportState(2)}>הגדרות</a>\r\n        </li>\r\n        <li  className=\"nav-item\">\r\n          <a  className={importerState == 3 ?\"nav-link active\" : \"nav-link\"} href=\"#\" onClick={() => navigationComp()}>מיפוי שדות</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className={importerState == 4 ?\"nav-link active\" : \"nav-link\"} href=\"#\" onClick={() => setimportState(4)}>שמירה</a>\r\n        </li>\r\n      </ul>\r\n   </div>\r\n        );\r\n}\r\n\r\n  export default Navigationt;","import { createContext, useReducer,useContext,useEffect } from \"react\";\r\nimport { ImporterContext } from \"./importContext\";\r\n\r\n\r\nconst initialState = {\r\n                list:[],\r\n                excelFiled:[],\r\n                listMaping:[{type:'ca_objects',title:'פריטים'},\r\n                            {type:'ca_object_lots',title:'רכישות'},\r\n                            {type:'ca_entities',title:'ישויות'},\r\n                            {type:'ca_collections',title:'אוספים'},\r\n                            {type:'ca_loans',title:'השאלות'},\r\n                            {type:'ca_places',title:'מקומות'},\r\n                            {type:'ca_movements',title:'תנועות'},\r\n                            {type:'ca_storage_locations',title:'מקומות אחסון'},\r\n                            {type:'ca_list_items',title:'רשימת פריטים'},\r\n                            {type:'ca_occurrences',title:'מופעים'}\r\n                        ]\r\n                      \r\n}\r\n\r\n\r\nexport const  ListContext  = createContext();\r\n\r\n\r\nfunction ListReducer(state,action){\r\n   \r\n    \r\n    switch (action.type) {\r\n        case \"setexcelFiled\":\r\n            return {\r\n                ...state,\r\n                excelFiled:action.payload,\r\n            }  \r\n              \r\n        case \"setList\":\r\n            return {\r\n                    ...state,\r\n                    list:action.payload\r\n            \r\n            }      \r\n        \r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n           \r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const ListProvider  = ({ children }) =>{\r\n   const [state, dispatch] = useReducer(ListReducer, initialState);\r\n   const {addField} = useContext(ImporterContext);  \r\n  \r\n   useEffect(()=>{\r\n    if(state.list)\r\n     {\r\n    state.list.map((item)=>\r\n    {return item.require ? addField(item,true):null})\r\n}\r\n},[state.list])\r\n\r\n    function setexcelFiled(state) {\r\n\r\n        dispatch({\r\n            type: 'setexcelFiled',\r\n            payload: state\r\n        });\r\n    }\r\n\r\n  function  upJson(url,funState,value){\r\n      if (funState=='setList'){\r\nconsole.log(url);\r\n        fetch(url)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            funState(Object.values(data)[0]);\r\n        })\r\n    }\r\n    if(funState=='setexcelFiled'){\r\n        var data = new FormData();\r\n        data.append('excelfile', value);\r\n\r\n        fetch(url,{\r\n            method: 'post',\r\n            body:value\r\n        })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            funState(data);\r\n        })\r\n\r\n    } \r\n  }\r\n   \r\n    function setList(value) {\r\n\r\n        dispatch({\r\n            type: 'setList',\r\n            payload:value     \r\n            \r\n        });\r\n\r\n    }\r\n   \r\n     \r\n    return (\r\n        <ListContext.Provider value={{\r\n            excelFiled:state.excelFiled,\r\n            list:state.list,\r\n            listMaping:state.listMaping,\r\n            setexcelFiled,\r\n            setList,\r\n            upJson\r\n            \r\n            \r\n        }}>\r\n        {children}\r\n        \r\n        </ListContext.Provider>\r\n    );\r\n\r\n}\r\n","\r\nimport React, { useContext,useState } from \"react\";\r\nimport { ImporterContext } from \"../context/importContext\";\r\nimport { ListContext } from \"../context/listContext\";\r\n\r\nfunction Settings() {\r\n  const  {importer} = useContext(ImporterContext);\r\n  const {listMaping} = useContext(ListContext); \r\n\r\n  var importTypeTitle;\r\n  listMaping.map((item)=>{\r\n    return item.type==importer.uploadFile.importType ? importTypeTitle=item.title:null\r\n  })\r\n  return (\r\n    <div className=\"container\"  >\r\n               <div className=\"row\">\r\n               <h6 className=\"text-end mt-3 mb-3\">סוג : {importTypeTitle}</h6>\r\n               </div></div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React, { useContext } from \"react\";\r\n//import { ListContext } from \"../context/listContext\";\r\nimport { ImporterContext } from \"../context/importContext\";\r\n\r\nfunction ListItem(prop) {\r\n\r\n  const  {addField} = useContext(ImporterContext);\r\n // const  {list} = useContext(ListContext);\r\n\r\n \r\n  return (   \r\n     <div className=\"border-bottom p-3\"  key={prop.index} >\r\n        <div className=\"row\">\r\n          <div className=\"col-9 text-end\">\r\n            <label className=\"h6\" data-element-code=\"preferred_labels\">{prop.list.title}</label>\r\n          </div>\r\n          <div className=\"col-3\">\r\n            <a className=\"btn-outline\" href=\"#\">\r\n              <li  className=\"primary fa fa-plus\" id=\"btnAddFieldpreferred_labels\" data-title={prop.list.title}  onClick={()=>{addField(prop.list); prop.showList()}} > </li>        \r\n            </a> הוספת שדה \r\n          </div>        \r\n        </div> \r\n     </div>\r\n  );\r\n}\r\n\r\nexport default ListItem;","import React, { useContext,useEffect } from \"react\";\r\nimport { ListContext } from \"../context/listContext\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nfunction List(prop) {\r\n\r\n  const  {list} = useContext(ListContext);\r\n  \r\n  return (\r\n    <div className=\"card p-3\" id=\"fildesList\">  \r\n    {list.map((item,i) =>\r\n     !item.require ? <ListItem  key={item.element_code} list={item} index={i} showList={prop.showList} />:null) } \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;","import React, { useContext,useState,useEffect } from \"react\";\r\nimport { ListContext } from \"../context/listContext\";\r\nimport { ImporterContext } from \"../context/importContext\";\r\n\r\n\r\nfunction FieldContent(prop) {\r\n\r\n  const {importer,setMapping,setMappingConst} = useContext(ImporterContext);  \r\n  const  {excelFiled} = useContext(ListContext); \r\n  \r\n const [Required, RequiredState] = useState(((prop.field.require)&(importer.mapping[prop.index].value=='')) ? true : false);\r\n  //const [Required, RequiredState] = useState(((prop.index==0||prop.index==1)&(importer.mapping[prop.index].value=='')) ? true : false);\r\n  const [listToConst, setlistToConst] = useState(null);\r\n\r\n  const inputContent = prop.indexf==null ? importer.mapping[prop.index] : importer.mapping[prop.index].fields[prop.indexf];\r\n // inputContent = inputContent==null?\"\":inputContent.value;\r\n  var IC = inputContent==null?\"\":inputContent.value;\r\n\r\n  \r\n  const [exval,exvalState]=useState('');\r\n\r\n  const myChangeHandler = (event) => {\r\n   var value=event.target.value;\r\n\r\n//RequiredField\r\n  if(prop.field.require)\r\n    value!=''? RequiredState(false): RequiredState(true);\r\n//\r\n\r\n//update importer   \r\nsetMapping(prop.index,prop.indexf,value)\r\n\r\n//\r\n  \r\n//update excel   \r\nif(!inputContent.const) \r\n{\r\n  value!='' && (excelFiled[value-1].selectd=true);\r\n  exval!='' && (excelFiled[exval-1].selectd=false);\r\n  exvalState(value);\r\n  }\r\n\r\n} \r\n\r\n   \r\n    useEffect(()=>{\r\n    if(inputContent.const & !listToConst)\r\n     {\r\n      fetch(\"http://localhost:3000/mana/app/plugins/importer/themes/default/react-app/build/data/dataListObject_type.json\")\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      setlistToConst(Object.values(Object.values(data)[0]));\r\n     })\r\n     \r\n  }},[inputContent.const])\r\n  \r\n//update excel when const selected   \r\n   const ChangeConst=(e)=>\r\n  { \r\n  \r\n   setMapping(prop.index,prop.indexf,'')\r\n   excelFiled.map((i)=>{\r\n                   (i.colNum==IC)&&(i.selectd=false)\r\n                  })\r\n setMappingConst(prop.index,prop.indexf,e.target.checked)\r\n //  \r\n\r\n\r\n  }\r\n  return (\r\n    \r\n    <div className=\"row pb-2 pt-2 rdv\" key={prop.indexf ? prop.indexf : prop.index}>\r\n         <label className=\"col-2 pt-1 h6\">{prop.field.title}</label>\r\n           <div className=\"dropdown col-6 ddl1\">\r\n              {!inputContent.const && <select id={prop.field.element_code}  name={prop.indexf==null ? prop.index: prop.indexf} value={IC} className={Required  ? \"form-select is-invalid \":\"form-select \"}  onChange={myChangeHandler}>\r\n                  <option value=\"\"></option>\r\n                  {excelFiled.map((excel) => {\r\n                    return (excel.selectd!=true | excel.colNum==IC) ?  <option key={excel.colNum} value={excel.colNum} >{excel.colNum + \" : \" + excel.title}</option>\r\n                    :  ''\r\n                  })}\r\n                </select>\r\n              }           \r\n\r\n        \r\n           {inputContent.const && (listToConst /*&& prop.field.list_id*/? <select className={Required  ? \"form-select is-invalid \":\"form-select \"} value={IC} onChange={myChangeHandler}>\r\n                    <option value=\"\"></option>\r\n                    {listToConst.map((item,i) => {\r\n                      return item.name ? <option key={i} value={item.idno}>{item.name}</option>:''})}\r\n                </select> : <input type=\"text\" name={prop.indexf==null ? prop.index: prop.indexf} id={prop.field.element_code} value={IC} className={Required  ? \"form-control is-invalid  \":\"form-control\"} onChange={myChangeHandler}>  \r\n                </input>\r\n                 )\r\n                    }\r\n              \r\n               <span className=\"invalid-feedback\">{Required && \"השדה לא יכול להיות ריק\"}</span>\r\n           </div>\r\n           \r\n         \r\n           {prop.index!=0 && <div className=\"col-1 pt-2 align-middle form-check\">\r\n               <input type=\"checkbox\" className=\"form-check-input\" checked={inputContent.const/*value={checke}*/} onChange={(e)=>{/*{checkState(e.target.checked);}*/ ChangeConst(e)}} />\r\n               <label className=\"form-check-label\" >Const</label>\r\n               \r\n           </div>\r\n           }   \r\n\r\n         {(!prop.field.require)? (\r\n         <>\r\n         <div className=\"col-3\" >\r\n           <button type=\"button\" className=\"btn btn-secondary\"  disabled={IC ? false : true}  data-bs-target=\"#exampleModal\" onClick={() =>(prop.showOptions(prop.index,prop.indexf))} > <i className=\"fa fa-cog\"></i> אפשרויות</button>\r\n         </div>\r\n         </>): ( null  )\r\n         }         \r\n       </div>\r\n\r\n  );\r\n}\r\nexport default FieldContent;","import React, { useContext } from \"react\";\r\nimport FieldContent from \"./FieldContent\";\r\nimport { ImporterContext } from \"../context/importContext\";\r\nimport { ListContext } from \"../context/listContext\";\r\n\r\n\r\n\r\nfunction ListInFieldContent(prop) {\r\n\r\n  const {deleteField,setAddMapping} = useContext(ImporterContext);\r\n  const {excelFiled} = useContext(ListContext); \r\n\r\n \r\n  return (\r\n    <div key={prop.index} className={(prop.item.require)?\"card sg1 card-header\":\"card sg1\"} >\r\n    <div className=\"card-body contain-preferred_labels\">\r\n\r\n    {(!prop.item.require)?(\r\n      <div className=\"row float-start pt-2\">\r\n     <a className=\"btn-outline-danger\" href=\"#\"> \r\n               <i className=\"fa fa-trash-o fa-lg\" aria-hidden=\"true\" onClick={() => deleteField(prop.index,setAddMapping,excelFiled)}></i>\r\n    </a></div>): ( null  )}\r\n\r\n    \r\n    {prop.item.fields ? ( <><h6 className=\"row pt-2 h6\">{prop.item.title}</h6> {prop.item.fields.map((item,i)=>{\r\n      return <FieldContent key={i} field={item} indexf={i} index={prop.index} showOptions={prop.showOptions} />\r\n    })}</>\r\n    ):(<FieldContent key={prop.index}  field={prop.item}  index={prop.index} showOptions={prop.showOptions} />)\r\n    }\r\n\r\n    </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\nexport default ListInFieldContent;","import React, { useContext,useState } from \"react\";\r\nimport { ImporterContext } from \"../context/importContext\";\r\n\r\nfunction Options(prop) {\r\nconst  {importer,setMappingOption} = useContext(ImporterContext);\r\n\r\nconst [settings, settingsState] = useState(prop.indexOF==null?importer.mapping[prop.indexO].settings:importer.mapping[prop.indexO].fields[prop.indexOF].settings);\r\n\r\n\r\n  const saveOptions=() =>{\r\n\r\n    setMappingOption(prop.indexO,prop.indexOF,settings);\r\n    prop.showOptions();\r\n    console.log(importer.mapping[prop.indexO]);\r\n\r\n  }\r\n\r\n  const myChangeHandler = (event) => {\r\n\r\n  const tempsettings = Object.assign([],settings);\r\n  var nameSettings =event.target.name;\r\n\r\n  if (nameSettings!=\"optionDelimiter\" && nameSettings!=\"matchOn\")       \r\n        tempsettings[nameSettings]=event.target.checked;\r\n  else\r\n    tempsettings[nameSettings]=event.target.value;\r\n\r\n  settingsState(tempsettings);\r\n\r\n   } \r\n\r\n\r\n  return  <div className=\"modal-dialog\" role=\"document\">\r\n  <div className=\"modal-content\">\r\n    <div className=\"modal-header\">\r\n        <h5 className=\"modal-title\" id=\"setOptionModalCenterTitle\">שם</h5>\r\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() =>prop.showOptions()} >\r\n            <span aria-hidden=\"true\">×</span>\r\n        </button>\r\n    </div>\r\n    <div className=\"modal-body\">\r\n     <table className=\"table table-striped table-options\">\r\n        <thead>\r\n        <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\">Value</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n            <th scope=\"row\">1</th>\r\n                <td>skipIfEmpty</td>\r\n                <td><input type=\"checkbox\" name=\"optionSkip\" checked={settings.optionSkip} onChange={myChangeHandler}/> </td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">2</th>\r\n                <td>skipRowIfEmpty</td>\r\n                <td><input type=\"checkbox\" name=\"optionSkipRow\" checked={settings.optionSkipRow ? settings.optionSkipRow:false} onChange={myChangeHandler}/></td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">3</th>\r\n                <td>skipGroupIfEmpty</td>\r\n                <td><input type=\"checkbox\" name=\"optionSkipGroup\" checked={settings.optionSkipGroup ? settings.optionSkipGroup:false} onChange={myChangeHandler}/></td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">4</th>\r\n                <td>delimiter</td>\r\n                <td><input name=\"optionDelimiter\" type=\"text\"  value={settings.optionDelimiter ? settings.optionDelimiter : \"\"}onChange={myChangeHandler}/> </td>\r\n            </tr>\r\n            <tr>\r\n                <th scope=\"row\">5</th>\r\n                <td>matchOn</td>\r\n                <td><select name=\"matchOn\" value={settings.matchOn ? settings.matchOn :\"\"} onChange={myChangeHandler}>\r\n                    <option value=\"selected=&quot;selected&quot;\"></option>\r\n                    <option value=\"idno\">מספר מזהה</option>\r\n                    <option value=\"label\">כותרת</option>\r\n                    <option value=\"label,Idno\">מספר מזהה וכותרת</option>\r\n                    </select>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n        <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() =>prop.showOptions()}>Close</button>\r\n            <button type=\"button\" className=\"btn btn-primary btn-update-settings\" data-sender-control=\"nameIndex2\" onClick={() =>saveOptions()}>Save changes</button>\r\n        </div>\r\n</div>\r\n</div>\r\n\r\n}\r\n\r\nexport default Options;","\r\n  import React, { useContext, useState } from \"react\";\r\n  import { ImporterContext } from \"../context/importContext\";\r\n  import List from './list';\r\n  import ListInFieldContent from './ListInFieldContent';\r\n // import FieldContent from './FieldContent';\r\n\r\n  \r\n  //import Optionss from './jj';\r\n  import Options from './Options';\r\n\r\n\r\n  function Mapping() {\r\n  \r\n    const  {importer} = useContext(ImporterContext);\r\n  \r\n    const [showO, showOState] = useState(false);\r\n    const [showL, showLState] = useState(false);\r\n    const [indexO, indexOState ]= useState();\r\n   const [indexOF, indexOFState ]= useState();\r\n\r\n\r\n    const showOptions= (i,J)=>{\r\n      console.log(i)\r\n      indexOState(i);\r\n     indexOFState(J);\r\n      console.log(J)\r\n      showOState(!showO);\r\n      \r\n     }\r\n     const showList= ()=>{ \r\n      showLState(!showL);    \r\n     }\r\n\r\n      return <div className=\"pb-5\">\r\n         {showO && <Options showOptions={showOptions} indexO={indexO} indexOF={indexOF}/>}\r\n             {!showO &&<form>\r\n              <div className=\"pb-5\" id=\"fieldsMapping\">\r\n                {importer.mapping.map((item, index) => {\r\n                  return( <ListInFieldContent key={index} item={item}  index={index} showOptions={showOptions} />\r\n                    )\r\n                   {/* <FieldContent key={index} id={item.id} title={item.type} index={index} showOptions={showOptions} />*/}\r\n                  \r\n                    }\r\n                    )}\r\n              {!showL && <button type=\"button\" className=\"mt-4 btn btn-secondary btn-lg btn-block col-12\" onClick={() =>showList()}> + הוספת שדה </button>}\r\n              {showL && <List showList={showList} />} \r\n            </div>\r\n       </form>}  \r\n     </div>\r\n     }\r\n     export default Mapping; \r\n \r\n        \r\n\r\n           \r\n\r\n\r\n            ","\r\n  import React from \"react\";\r\n\r\n\r\n  function Save () {\r\n    \r\n      return (\r\n      <div className=\"alert alert-success\" role=\"alert\" align=\"center\">תבנית היבוא נשמרה בהצלחה  \r\n      <a href=\"/mana/index.php/batch/MetadataImport/Run/importer_id/2114\">לביצוע יבוא לחצו כאן </a>\r\n      </div>\r\n      )\r\n\r\n  }\r\n  \r\n  export default Save;","\r\n  import React, { useContext } from \"react\";\r\n  import { ImporterContext } from \"../context/importContext\";\r\n\r\n\r\n  function SettingsFile() {\r\n   \r\n   const  {importer, setSetting} = useContext(ImporterContext);\r\n   \r\n   const myChangeHandler = (event) => {\r\n\r\n    setSetting(event.target.name,event.target.value);\r\n     \r\n    }\r\n  \r\n      return <div className=\"container\"  >\r\n               <div className=\"row card-header\">\r\n               <div className=\"col-12\">\r\n                 <div className=\"mb-3 text-end\">\r\n                    <label className=\"form-label\">שם התבנית</label>\r\n                     <input name=\"nametamplet\" value={importer.settings.nametamplet} className={importer.settings.nametamplet=='' ? \"form-control is-invalid\":\"form-control\"} type=\"text\" size=\"30\" placeholder=\"NameTamplet\"  onChange={myChangeHandler}/>\r\n                    {/* <input name=\"local\" value={importer.setting.local} className=\"form-control\" type=\"text\" size=\"30\"  onChange={myChangeHandler}/>*/} \r\n                    <span className=\"invalid-feedback\">{(importer.settings.nametamplet == \"\") && \"הכנס שם תבנית\"}</span>\r\n                </div>\r\n                <div className=\"mb-3 text-end\">\r\n                  <label className=\"form-label\">שפה</label>\r\n                  <select name=\"language\" className=\"form-select\" value={importer.settings.language} onChange={myChangeHandler}>\r\n                    <option value=\"he_IL\" >עברית</option>\r\n                    <option value=\"en_US\" >אנגלית</option>\r\n                    <option value=\"ar_MA\" >ערבית</option>\r\n                  </select>\r\n                </div> \r\n                </div>\r\n             </div>\r\n            </div>\r\n            \r\n    }\r\n  \r\n  export default SettingsFile;","\r\nimport React, { useContext,useState} from \"react\";\r\nimport { ImporterContext } from \"../context/importContext\";\r\nimport { ListContext } from \"../context/listContext\";\r\n\r\n\r\nfunction UploadFile() {\r\n\r\n const  {importer,setUploadFile} = useContext(ImporterContext);\r\n const {listMaping} = useContext(ListContext); \r\n const [Required, RequiredState] = useState(true);\r\n\r\n\r\n const myChangeHandler = (event) =>{\r\n  \r\n     setUploadFile(event.target.name,event.target.value);\r\n     if((!importer.uploadFile.excelfile.includes(\".xlsx\") & !importer.uploadFile.excelfile.includes(\".xls\") )| importer.uploadFile.excelfile=='')\r\n      RequiredState(true);\r\n     else\r\n      RequiredState(false);\r\n // importer.mapping[2].list_id=7;\r\n\r\n  }\r\n    return(\r\n    <div className=\"container\">\r\n      <div className=\"row card-header\">\r\n        <div className=\"col-12 \" >\r\n          <form>\r\n            <div className=\"mb-3 text-end\">\r\n                <label className=\"form-label\">סוג הייבוא</label>\r\n                <select name=\"importType\" className={importer.uploadFile.importType=='' ? \"form-select is-invalid\":\"form-select\"} value={importer.uploadFile.importType} onChange={myChangeHandler}>\r\n                  <option value=\"\"></option>\r\n                  {listMaping.map((item)=>{\r\n                    return <option key={item.type} value={item.type}>{item.title}</option>\r\n                  })}\r\n                  {/* <option value=\"ca_objects\">פריטים</option>\r\n                  <option value=\"ca_object_lots\">רכישות</option>\r\n                  <option value=\"ca_entities\">ישויות</option>\r\n                  <option value=\"ca_collections\">אוספים</option>\r\n                  <option value=\"ca_loans\">השאלות</option>\r\n                  <option value=\"ca_places\">מקומות</option>\r\n                  <option value=\"ca_movements\">תנועות</option>\r\n                  <option value=\"ca_storage_locations\">מקומות אחסון</option>\r\n                  <option value=\"ca_list_items\">רשימת פריטים</option>\r\n                  <option value=\"ca_occurrences\">מופעים</option> */}\r\n                </select>  \r\n                <span className=\"invalid-feedback\">{importer.uploadFile.importType=='' && \"השדה חובה\"}</span>\r\n            </div>\r\n            <div className=\"mb-3 text-end\">\r\n                <label className=\"form-label\">בחר קובץ</label>\r\n                <input type=\"file\" name=\"excelfile\" className={Required  ? \"form-control is-invalid\":\"form-control\"} onChange={myChangeHandler}/>\r\n                <span className=\"invalid-feedback\">{Required && \"השדה חובה וסוג הקובץ חייב להיות מסוג xlsx\"}</span>\r\n            </div>\r\n            \r\n          </form>\r\n        </div>\r\n    </div>  \r\n    </div>   \r\n    ) ;\r\n  }\r\n\r\n\r\nexport default UploadFile;","import React,{ useContext} from 'react';\nimport Navigation from './Navigation';\nimport Settings from './Settings';\nimport { ImporterContext } from '../context/importContext';\nimport Mapping from './Mapping';\nimport Save from './Save'\nimport SettingsFile from './SettingsFile';\nimport UploadFile from './UploadFile';\nimport { ListContext } from \"../context/listContext\";\n\n\nfunction AppImporter() {\n \nconst  {importerState,importer,setimportState} = useContext(ImporterContext);\nconst  {upJson,setList,setexcelFiled} = useContext(ListContext);\n\nconst updatebtnNext = () =>{\n\n  setimportState(importerState+1);\n  if(importerState==1){\n  //  upJson('http://localhost:3000/mana/app/plugins/importer/themes/default/react-app/build/data/data.json',setList);\n    upJson('http://localhost/mana/service.php/importer/importer/ListField?table='+importer.uploadFile.importType,setList);\n   //upJson('http://localhost:3000/mana/app/plugins/importer/themes/default/react-app/build/data/dataExcelFiled.json',setexcelFiled);\n   upJson('http://localhost/mana/service.php/importer/importer/ExcelList',setexcelFiled,importer.uploadFile.excelfile);\n\n  }\n\n}\n// state button save\nvar require=false;\n\nimporter.mapping.map((item)=>{\n  return (item.require==true & item.value=='') ? require=true : null;\n});\n//\n\nconst onDisabled =() =>{\n\n  switch (importerState) {\n  case 1 :\n    return (importer.uploadFile.excelfile=='' | importer.uploadFile.importType=='' | (!importer.uploadFile.excelfile.includes(\".xlsx\") & !importer.uploadFile.excelfile.includes(\".xls\")) ? true : false) \n  case 2 :\n    return (importer.settings.nametamplet=='' ? true : false)  \n // case 3 :\n  //  return (require ? true : false)        \n  default:\n    return false;\n      \n  }\n   \n      \n    }\n    return (\n    <div className=\"App\">\n      <header>\n        <Settings />\n      </header>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            {importerState == 3 ? (<button className=\"float-start pb-6 btn btn-primary\" disabled={require ? true : false} onClick={() => setimportState(4)}>\n             <i className=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>  שמירה   \n                </button>\n            ) : ( null  )}\n            <Navigation /> \n\n            {importerState == 1 && <UploadFile />}\n            {importerState == 2 && <SettingsFile />}\n            {importerState == 3 && <Mapping />}\n            {importerState == 4 && <Save />}\n            {importerState < 3 ? (\n            <button className=\"btn btn-primary\" disabled={onDisabled()} onClick={() => updatebtnNext()}>\n             הבא {\">\"}      \n                </button>\n            ) : ( null  )}\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AppImporter;\n\n","import './App.css';\nimport { ImporterProvider } from './context/importContext';\nimport AppImporter from \"./components/AppImporter\";\nimport { ListProvider } from './context/listContext';\n\n\nfunction App() {\n  return (\n    <ImporterProvider>\n     <ListProvider>\n        <AppImporter/>\n        </ListProvider>  \n    </ImporterProvider>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}